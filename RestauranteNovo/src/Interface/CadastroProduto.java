/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Controlador.Controlador;
import Modelo.Categoria;
import Modelo.Produto;
import java.awt.Image;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;

/**
 *
 * @author Rafael
 */
public class CadastroProduto extends javax.swing.JDialog {
    Controlador control;
    PesqProdutos pesqProd;
    Produto prodEdicao;
    /**
     * Creates new form CadastroProduto
     */
    public CadastroProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null); 
        btnEditar.setVisible(false);
        control = new Controlador();
        pesqProd = new PesqProdutos(parent, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrecoCompra = new javax.swing.JTextField();
        txtValidade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTamanho = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox();
        lblFoto = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPrecoVenda = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtIngredientes = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Nome*");

        jLabel2.setText("Preço de Compra*");

        jLabel3.setText("Validade");

        jLabel4.setText("Tamanho");

        jLabel5.setText("Categoria");

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("Foto");
        lblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoMouseClicked(evt);
            }
        });

        jLabel7.setText("Preço de Venda*");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        txtIngredientes.setColumns(20);
        txtIngredientes.setRows(5);
        jScrollPane1.setViewportView(txtIngredientes);

        jLabel6.setText("Ingredientes:");

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTamanho)
                                            .addComponent(txtValidade, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPrecoVenda)
                                            .addComponent(txtPrecoCompra))))
                                .addGap(10, 10, 10)
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(5, 5, 5)
                .addComponent(jLabel6)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(btnCadastrar)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        String msgErro = "";
        Double precoCompra = null, precoVenda = null;
        Date dataValidade = null;
        try {//teste para saber se o que foi inserido são numeros
            precoCompra = Double.parseDouble(txtPrecoCompra.getText());
            precoVenda = Double.parseDouble(txtPrecoVenda.getText());
        } catch (NumberFormatException nfe) {
            msgErro = msgErro + "Os campos precos devem ser numeros reais separados por ponto \n";
        }
        String validade = txtValidade.getText();
        if (!(validade.equals(""))){//se tiver alguma coisa no campo data...
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            sdf.setLenient(false);
            try {//testa para saber se há um formato válido de data no txt
                dataValidade = sdf.parse(validade);
            } catch (ParseException e) {
                msgErro = msgErro + "O campo data deve estar em formato dd/mm/yyyy \n";
            }
        } else {
            validade = null;
        }
        String nome = txtNome.getText();
        String tamanho = txtTamanho.getText();
        String ingredientes = txtIngredientes.getText();
        msgErro = msgErro + validarCampos(nome, tamanho, ingredientes);
        Categoria cat = (Categoria) cmbCategoria.getSelectedItem();
        
        if("".equals(msgErro)){
            control.inserirProduto(nome, precoCompra, precoVenda, dataValidade, tamanho, ingredientes, cat, lblFoto.getIcon());
            int opcao = JOptionPane.showConfirmDialog(rootPane, "Produto inserido com suceso, deseja cadastrar outro?", "titulo", YES_NO_OPTION);
            if (opcao == 0){//resposta == sim
                limparCampos();
            } else if (opcao == 1){//resposta nao
                limparCampos();
                this.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, msgErro);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void lblFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoMouseClicked
        JFileChooser janelaArq = new JFileChooser();
        if (janelaArq.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File foto = janelaArq.getSelectedFile();
            mostrarFoto(new ImageIcon(foto.toString()));
        }
    }//GEN-LAST:event_lblFotoMouseClicked

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        pesqProd.setProdEdicao(null);
        pesqProd.setVisible(true);
        if(pesqProd.getProdEdicao() != null){
            Produto prod = pesqProd.getProdEdicao();

            txtNome.setText(prod.getNomeProduto());
            txtPrecoCompra.setText(String.valueOf(prod.getPrecoCompraProduto()));
            txtPrecoVenda.setText(String.valueOf(prod.getPrecoVendaProduto()));

            String data;
            if (prod.getDataValidadeProduto() == null){
                data = "";
            } else {
                String ano = prod.getDataValidadeProduto().toString().substring(0, 4); 
                String mes  = prod.getDataValidadeProduto().toString().substring(5, 7);
                String dia  = prod.getDataValidadeProduto().toString().substring(8, 10); 
                data = dia+"/"+mes+"/"+ano;
            }
            txtValidade.setText(data);       
            txtTamanho.setText(prod.getTamanhoProduto());
            cmbCategoria.setSelectedItem(prod.getCategoria());//saporra nao ta setando certo

            txtIngredientes.setText(prod.getIngredienteProduto());
            if(prod.getFotoProduto() != null){
                mostrarFoto(new ImageIcon(prod.getFotoProduto()));
            } else {
                lblFoto.setIcon(null);
                lblFoto.setText("Foto");
            }
            btnEditar.setVisible(true);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String msgErro = "";
        Double precoCompra = null, precoVenda = null;
        Date dataValidade = null;
        try {//teste para saber se o que foi inserido são numeros
            precoCompra = Double.parseDouble(txtPrecoCompra.getText());
            precoVenda = Double.parseDouble(txtPrecoVenda.getText());
        } catch (NumberFormatException nfe) {
            msgErro = msgErro + "Os campos precos devem ser numeros reais separados por ponto \n";
        }
        String validade = txtValidade.getText();
        if (!(validade.equals(""))){//se tiver alguma coisa no campo data...
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            sdf.setLenient(false);
            try {//testa para saber se há um formato válido de data no txt
                dataValidade = sdf.parse(validade);
            } catch (ParseException e) {
                msgErro = msgErro + "O campo data deve estar em formato dd/mm/yyyy \n";
            }
        } else {
            validade = null;
        }
        String nome = txtNome.getText();
        String tamanho = txtTamanho.getText();
        String ingredientes = txtIngredientes.getText();
        msgErro = msgErro + validarCampos(nome, tamanho, ingredientes);
        Categoria cat = (Categoria) cmbCategoria.getSelectedItem();
        
        if("".equals(msgErro)){
            Produto prod = pesqProd.getProdEdicao();
            prod.setCategoria(cat);
            prod.setDataValidadeProduto(dataValidade);
            prod.setFotoProduto(control.IconToBytes(lblFoto.getIcon()));
            prod.setIngredienteProduto(ingredientes);
            prod.setNomeProduto(nome);
            prod.setPrecoCompraProduto(precoCompra);
            prod.setPrecoVendaProduto(precoVenda);
            prod.setTamanhoProduto(tamanho);
            control.alterarProduto(prod);
            JOptionPane.showMessageDialog(rootPane, "Produto Alterado com sucesso");
            limparCampos();
            pesqProd.setProdEdicao(null);
            btnEditar.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(rootPane, msgErro);
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        carregarCombo();
    }//GEN-LAST:event_formComponentShown
     
    public void carregarCombo(){
        List lstCategoria = control.listarCategoria();
        if (lstCategoria != null) {
            cmbCategoria.setModel(new DefaultComboBoxModel(lstCategoria.toArray()));
        } 
    }
        
    public void setProdutoAlterar(Produto prod){
        prodEdicao = prod;
    }
    
    public void limparCampos(){
        txtNome.setText("");
        txtPrecoCompra.setText("");
        txtPrecoVenda.setText("");
        txtValidade.setText("");
        lblFoto.setIcon(null);
        lblFoto.setText("Foto");
        txtTamanho.setText("");
        txtIngredientes.setText("");
    }
    public void mostrarFoto(ImageIcon imagem){
        imagem.setImage(imagem.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_DEFAULT));
        lblFoto.setText("");
        lblFoto.setIcon(imagem);        
    }
    
    public String validarCampos(String nome, String tamanho, String ingredientes){
        String msgErro= "";
        if ("".equals(nome)){
            msgErro = msgErro + "campo Nome vazio\n";
        }
        
        if (nome.length() > 25){
            msgErro = msgErro + "campo nome deve ser menor que 25 letras \n";
        }
        
        if (tamanho.length() > 10){
            msgErro = msgErro + "campo tamanho ser menor que 10 letras \n";
        }
        
        if (ingredientes.length() > 100){
            msgErro = msgErro + "campo ingredientes deve ser menor que 100 letras \n";
        }
        return msgErro;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroProduto dialog = new CadastroProduto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextArea txtIngredientes;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPrecoCompra;
    private javax.swing.JTextField txtPrecoVenda;
    private javax.swing.JTextField txtTamanho;
    private javax.swing.JTextField txtValidade;
    // End of variables declaration//GEN-END:variables
}
